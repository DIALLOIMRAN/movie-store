//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CLIENTVIDEO.ServiceReferenceVideo {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Video", Namespace="http://schemas.datacontract.org/2004/07/SERVICEVIDEO")]
    [System.SerializableAttribute()]
    public partial class Video : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CLIENTVIDEO.ServiceReferenceVideo.Comments[] CommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CLIENTVIDEO.ServiceReferenceVideo.Watch[] WatchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string categoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int codeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string dataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string describeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string posterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string tittleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> voteField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CLIENTVIDEO.ServiceReferenceVideo.Comments[] Comments {
            get {
                return this.CommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentsField, value) != true)) {
                    this.CommentsField = value;
                    this.RaisePropertyChanged("Comments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CLIENTVIDEO.ServiceReferenceVideo.Watch[] Watch {
            get {
                return this.WatchField;
            }
            set {
                if ((object.ReferenceEquals(this.WatchField, value) != true)) {
                    this.WatchField = value;
                    this.RaisePropertyChanged("Watch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string category {
            get {
                return this.categoryField;
            }
            set {
                if ((object.ReferenceEquals(this.categoryField, value) != true)) {
                    this.categoryField = value;
                    this.RaisePropertyChanged("category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int code {
            get {
                return this.codeField;
            }
            set {
                if ((this.codeField.Equals(value) != true)) {
                    this.codeField = value;
                    this.RaisePropertyChanged("code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string data {
            get {
                return this.dataField;
            }
            set {
                if ((object.ReferenceEquals(this.dataField, value) != true)) {
                    this.dataField = value;
                    this.RaisePropertyChanged("data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string describe {
            get {
                return this.describeField;
            }
            set {
                if ((object.ReferenceEquals(this.describeField, value) != true)) {
                    this.describeField = value;
                    this.RaisePropertyChanged("describe");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string poster {
            get {
                return this.posterField;
            }
            set {
                if ((object.ReferenceEquals(this.posterField, value) != true)) {
                    this.posterField = value;
                    this.RaisePropertyChanged("poster");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string tittle {
            get {
                return this.tittleField;
            }
            set {
                if ((object.ReferenceEquals(this.tittleField, value) != true)) {
                    this.tittleField = value;
                    this.RaisePropertyChanged("tittle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> vote {
            get {
                return this.voteField;
            }
            set {
                if ((this.voteField.Equals(value) != true)) {
                    this.voteField = value;
                    this.RaisePropertyChanged("vote");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Comments", Namespace="http://schemas.datacontract.org/2004/07/SERVICEVIDEO")]
    [System.SerializableAttribute()]
    public partial class Comments : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MOVIEIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int USERIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CLIENTVIDEO.ServiceReferenceVideo.User UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CLIENTVIDEO.ServiceReferenceVideo.Video VideoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string contentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> datePostField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MOVIEID {
            get {
                return this.MOVIEIDField;
            }
            set {
                if ((this.MOVIEIDField.Equals(value) != true)) {
                    this.MOVIEIDField = value;
                    this.RaisePropertyChanged("MOVIEID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int USERID {
            get {
                return this.USERIDField;
            }
            set {
                if ((this.USERIDField.Equals(value) != true)) {
                    this.USERIDField = value;
                    this.RaisePropertyChanged("USERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CLIENTVIDEO.ServiceReferenceVideo.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CLIENTVIDEO.ServiceReferenceVideo.Video Video {
            get {
                return this.VideoField;
            }
            set {
                if ((object.ReferenceEquals(this.VideoField, value) != true)) {
                    this.VideoField = value;
                    this.RaisePropertyChanged("Video");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string content {
            get {
                return this.contentField;
            }
            set {
                if ((object.ReferenceEquals(this.contentField, value) != true)) {
                    this.contentField = value;
                    this.RaisePropertyChanged("content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> datePost {
            get {
                return this.datePostField;
            }
            set {
                if ((this.datePostField.Equals(value) != true)) {
                    this.datePostField = value;
                    this.RaisePropertyChanged("datePost");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Watch", Namespace="http://schemas.datacontract.org/2004/07/SERVICEVIDEO")]
    [System.SerializableAttribute()]
    public partial class Watch : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MOVIEIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int USERIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CLIENTVIDEO.ServiceReferenceVideo.User UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CLIENTVIDEO.ServiceReferenceVideo.Video VideoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> noteField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MOVIEID {
            get {
                return this.MOVIEIDField;
            }
            set {
                if ((this.MOVIEIDField.Equals(value) != true)) {
                    this.MOVIEIDField = value;
                    this.RaisePropertyChanged("MOVIEID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int USERID {
            get {
                return this.USERIDField;
            }
            set {
                if ((this.USERIDField.Equals(value) != true)) {
                    this.USERIDField = value;
                    this.RaisePropertyChanged("USERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CLIENTVIDEO.ServiceReferenceVideo.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CLIENTVIDEO.ServiceReferenceVideo.Video Video {
            get {
                return this.VideoField;
            }
            set {
                if ((object.ReferenceEquals(this.VideoField, value) != true)) {
                    this.VideoField = value;
                    this.RaisePropertyChanged("Video");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> note {
            get {
                return this.noteField;
            }
            set {
                if ((this.noteField.Equals(value) != true)) {
                    this.noteField = value;
                    this.RaisePropertyChanged("note");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/SERVICEVIDEO")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CLIENTVIDEO.ServiceReferenceVideo.Comments[] CommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CLIENTVIDEO.ServiceReferenceVideo.Watch[] WatchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int codeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string firstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string lastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string profilField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string roleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CLIENTVIDEO.ServiceReferenceVideo.Comments[] Comments {
            get {
                return this.CommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentsField, value) != true)) {
                    this.CommentsField = value;
                    this.RaisePropertyChanged("Comments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CLIENTVIDEO.ServiceReferenceVideo.Watch[] Watch {
            get {
                return this.WatchField;
            }
            set {
                if ((object.ReferenceEquals(this.WatchField, value) != true)) {
                    this.WatchField = value;
                    this.RaisePropertyChanged("Watch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int code {
            get {
                return this.codeField;
            }
            set {
                if ((this.codeField.Equals(value) != true)) {
                    this.codeField = value;
                    this.RaisePropertyChanged("code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.firstNameField, value) != true)) {
                    this.firstNameField = value;
                    this.RaisePropertyChanged("firstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.lastNameField, value) != true)) {
                    this.lastNameField = value;
                    this.RaisePropertyChanged("lastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string profil {
            get {
                return this.profilField;
            }
            set {
                if ((object.ReferenceEquals(this.profilField, value) != true)) {
                    this.profilField = value;
                    this.RaisePropertyChanged("profil");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string role {
            get {
                return this.roleField;
            }
            set {
                if ((object.ReferenceEquals(this.roleField, value) != true)) {
                    this.roleField = value;
                    this.RaisePropertyChanged("role");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceVideo.ISVideo")]
    public interface ISVideo {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISVideo/getVideo", ReplyAction="http://tempuri.org/ISVideo/getVideoResponse")]
        CLIENTVIDEO.ServiceReferenceVideo.Video getVideo(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISVideo/getVideo", ReplyAction="http://tempuri.org/ISVideo/getVideoResponse")]
        System.Threading.Tasks.Task<CLIENTVIDEO.ServiceReferenceVideo.Video> getVideoAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISVideo/getVideos", ReplyAction="http://tempuri.org/ISVideo/getVideosResponse")]
        CLIENTVIDEO.ServiceReferenceVideo.Video[] getVideos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISVideo/getVideos", ReplyAction="http://tempuri.org/ISVideo/getVideosResponse")]
        System.Threading.Tasks.Task<CLIENTVIDEO.ServiceReferenceVideo.Video[]> getVideosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISVideo/getVideosByTittle", ReplyAction="http://tempuri.org/ISVideo/getVideosByTittleResponse")]
        CLIENTVIDEO.ServiceReferenceVideo.Video[] getVideosByTittle(string tittle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISVideo/getVideosByTittle", ReplyAction="http://tempuri.org/ISVideo/getVideosByTittleResponse")]
        System.Threading.Tasks.Task<CLIENTVIDEO.ServiceReferenceVideo.Video[]> getVideosByTittleAsync(string tittle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISVideo/getVideosByCategory", ReplyAction="http://tempuri.org/ISVideo/getVideosByCategoryResponse")]
        CLIENTVIDEO.ServiceReferenceVideo.Video[] getVideosByCategory(string categorie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISVideo/getVideosByCategory", ReplyAction="http://tempuri.org/ISVideo/getVideosByCategoryResponse")]
        System.Threading.Tasks.Task<CLIENTVIDEO.ServiceReferenceVideo.Video[]> getVideosByCategoryAsync(string categorie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISVideo/getVideoByCode", ReplyAction="http://tempuri.org/ISVideo/getVideoByCodeResponse")]
        CLIENTVIDEO.ServiceReferenceVideo.Video[] getVideoByCode(int code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISVideo/getVideoByCode", ReplyAction="http://tempuri.org/ISVideo/getVideoByCodeResponse")]
        System.Threading.Tasks.Task<CLIENTVIDEO.ServiceReferenceVideo.Video[]> getVideoByCodeAsync(int code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISVideo/addVideo", ReplyAction="http://tempuri.org/ISVideo/addVideoResponse")]
        string addVideo(CLIENTVIDEO.ServiceReferenceVideo.Video video);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISVideo/addVideo", ReplyAction="http://tempuri.org/ISVideo/addVideoResponse")]
        System.Threading.Tasks.Task<string> addVideoAsync(CLIENTVIDEO.ServiceReferenceVideo.Video video);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISVideo/deleteVideo", ReplyAction="http://tempuri.org/ISVideo/deleteVideoResponse")]
        string deleteVideo(int code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISVideo/deleteVideo", ReplyAction="http://tempuri.org/ISVideo/deleteVideoResponse")]
        System.Threading.Tasks.Task<string> deleteVideoAsync(int code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISVideo/addUser", ReplyAction="http://tempuri.org/ISVideo/addUserResponse")]
        void addUser(CLIENTVIDEO.ServiceReferenceVideo.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISVideo/addUser", ReplyAction="http://tempuri.org/ISVideo/addUserResponse")]
        System.Threading.Tasks.Task addUserAsync(CLIENTVIDEO.ServiceReferenceVideo.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISVideo/gerUser", ReplyAction="http://tempuri.org/ISVideo/gerUserResponse")]
        CLIENTVIDEO.ServiceReferenceVideo.User gerUser(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISVideo/gerUser", ReplyAction="http://tempuri.org/ISVideo/gerUserResponse")]
        System.Threading.Tasks.Task<CLIENTVIDEO.ServiceReferenceVideo.User> gerUserAsync(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISVideo/isValidEmail", ReplyAction="http://tempuri.org/ISVideo/isValidEmailResponse")]
        bool isValidEmail(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISVideo/isValidEmail", ReplyAction="http://tempuri.org/ISVideo/isValidEmailResponse")]
        System.Threading.Tasks.Task<bool> isValidEmailAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISVideo/isValidPassword", ReplyAction="http://tempuri.org/ISVideo/isValidPasswordResponse")]
        bool isValidPassword(string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISVideo/isValidPassword", ReplyAction="http://tempuri.org/ISVideo/isValidPasswordResponse")]
        System.Threading.Tasks.Task<bool> isValidPasswordAsync(string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISVideo/getCommantaires", ReplyAction="http://tempuri.org/ISVideo/getCommantairesResponse")]
        CLIENTVIDEO.ServiceReferenceVideo.Comments[] getCommantaires(int codeFilm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISVideo/getCommantaires", ReplyAction="http://tempuri.org/ISVideo/getCommantairesResponse")]
        System.Threading.Tasks.Task<CLIENTVIDEO.ServiceReferenceVideo.Comments[]> getCommantairesAsync(int codeFilm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISVideo/addCommentaire", ReplyAction="http://tempuri.org/ISVideo/addCommentaireResponse")]
        string addCommentaire(CLIENTVIDEO.ServiceReferenceVideo.Comments commentaire);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISVideo/addCommentaire", ReplyAction="http://tempuri.org/ISVideo/addCommentaireResponse")]
        System.Threading.Tasks.Task<string> addCommentaireAsync(CLIENTVIDEO.ServiceReferenceVideo.Comments commentaire);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISVideo/updateCommentaire", ReplyAction="http://tempuri.org/ISVideo/updateCommentaireResponse")]
        string updateCommentaire(CLIENTVIDEO.ServiceReferenceVideo.Comments commentaire);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISVideo/updateCommentaire", ReplyAction="http://tempuri.org/ISVideo/updateCommentaireResponse")]
        System.Threading.Tasks.Task<string> updateCommentaireAsync(CLIENTVIDEO.ServiceReferenceVideo.Comments commentaire);
        
        // CODEGEN : La génération du contrat de message depuis le nom de wrapper (DownloadRequest) du message DownloadRequest ne correspond pas à la valeur par défaut (telecharger)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISVideo/telecharger", ReplyAction="http://tempuri.org/ISVideo/telechargerResponse")]
        CLIENTVIDEO.ServiceReferenceVideo.RemoteFileInfo telecharger(CLIENTVIDEO.ServiceReferenceVideo.DownloadRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISVideo/telecharger", ReplyAction="http://tempuri.org/ISVideo/telechargerResponse")]
        System.Threading.Tasks.Task<CLIENTVIDEO.ServiceReferenceVideo.RemoteFileInfo> telechargerAsync(CLIENTVIDEO.ServiceReferenceVideo.DownloadRequest request);
        
        // CODEGEN : La génération du contrat de message depuis l'opération uploader n'est ni RPC, ni encapsulée dans un document.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISVideo/uploader", ReplyAction="http://tempuri.org/ISVideo/uploaderResponse")]
        CLIENTVIDEO.ServiceReferenceVideo.uploaderResponse uploader(CLIENTVIDEO.ServiceReferenceVideo.RemoteFileInfo request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISVideo/uploader", ReplyAction="http://tempuri.org/ISVideo/uploaderResponse")]
        System.Threading.Tasks.Task<CLIENTVIDEO.ServiceReferenceVideo.uploaderResponse> uploaderAsync(CLIENTVIDEO.ServiceReferenceVideo.RemoteFileInfo request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DownloadRequest", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DownloadRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string FileName;
        
        public DownloadRequest() {
        }
        
        public DownloadRequest(string FileName) {
            this.FileName = FileName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoteFileInfo", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class RemoteFileInfo {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string FileName;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public long Length;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream FileByteStream;
        
        public RemoteFileInfo() {
        }
        
        public RemoteFileInfo(string FileName, long Length, System.IO.Stream FileByteStream) {
            this.FileName = FileName;
            this.Length = Length;
            this.FileByteStream = FileByteStream;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class uploaderResponse {
        
        public uploaderResponse() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISVideoChannel : CLIENTVIDEO.ServiceReferenceVideo.ISVideo, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SVideoClient : System.ServiceModel.ClientBase<CLIENTVIDEO.ServiceReferenceVideo.ISVideo>, CLIENTVIDEO.ServiceReferenceVideo.ISVideo {
        
        public SVideoClient() {
        }
        
        public SVideoClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SVideoClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SVideoClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SVideoClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CLIENTVIDEO.ServiceReferenceVideo.Video getVideo(int id) {
            return base.Channel.getVideo(id);
        }
        
        public System.Threading.Tasks.Task<CLIENTVIDEO.ServiceReferenceVideo.Video> getVideoAsync(int id) {
            return base.Channel.getVideoAsync(id);
        }
        
        public CLIENTVIDEO.ServiceReferenceVideo.Video[] getVideos() {
            return base.Channel.getVideos();
        }
        
        public System.Threading.Tasks.Task<CLIENTVIDEO.ServiceReferenceVideo.Video[]> getVideosAsync() {
            return base.Channel.getVideosAsync();
        }
        
        public CLIENTVIDEO.ServiceReferenceVideo.Video[] getVideosByTittle(string tittle) {
            return base.Channel.getVideosByTittle(tittle);
        }
        
        public System.Threading.Tasks.Task<CLIENTVIDEO.ServiceReferenceVideo.Video[]> getVideosByTittleAsync(string tittle) {
            return base.Channel.getVideosByTittleAsync(tittle);
        }
        
        public CLIENTVIDEO.ServiceReferenceVideo.Video[] getVideosByCategory(string categorie) {
            return base.Channel.getVideosByCategory(categorie);
        }
        
        public System.Threading.Tasks.Task<CLIENTVIDEO.ServiceReferenceVideo.Video[]> getVideosByCategoryAsync(string categorie) {
            return base.Channel.getVideosByCategoryAsync(categorie);
        }
        
        public CLIENTVIDEO.ServiceReferenceVideo.Video[] getVideoByCode(int code) {
            return base.Channel.getVideoByCode(code);
        }
        
        public System.Threading.Tasks.Task<CLIENTVIDEO.ServiceReferenceVideo.Video[]> getVideoByCodeAsync(int code) {
            return base.Channel.getVideoByCodeAsync(code);
        }
        
        public string addVideo(CLIENTVIDEO.ServiceReferenceVideo.Video video) {
            return base.Channel.addVideo(video);
        }
        
        public System.Threading.Tasks.Task<string> addVideoAsync(CLIENTVIDEO.ServiceReferenceVideo.Video video) {
            return base.Channel.addVideoAsync(video);
        }
        
        public string deleteVideo(int code) {
            return base.Channel.deleteVideo(code);
        }
        
        public System.Threading.Tasks.Task<string> deleteVideoAsync(int code) {
            return base.Channel.deleteVideoAsync(code);
        }
        
        public void addUser(CLIENTVIDEO.ServiceReferenceVideo.User user) {
            base.Channel.addUser(user);
        }
        
        public System.Threading.Tasks.Task addUserAsync(CLIENTVIDEO.ServiceReferenceVideo.User user) {
            return base.Channel.addUserAsync(user);
        }
        
        public CLIENTVIDEO.ServiceReferenceVideo.User gerUser(string email, string password) {
            return base.Channel.gerUser(email, password);
        }
        
        public System.Threading.Tasks.Task<CLIENTVIDEO.ServiceReferenceVideo.User> gerUserAsync(string email, string password) {
            return base.Channel.gerUserAsync(email, password);
        }
        
        public bool isValidEmail(string email) {
            return base.Channel.isValidEmail(email);
        }
        
        public System.Threading.Tasks.Task<bool> isValidEmailAsync(string email) {
            return base.Channel.isValidEmailAsync(email);
        }
        
        public bool isValidPassword(string password) {
            return base.Channel.isValidPassword(password);
        }
        
        public System.Threading.Tasks.Task<bool> isValidPasswordAsync(string password) {
            return base.Channel.isValidPasswordAsync(password);
        }
        
        public CLIENTVIDEO.ServiceReferenceVideo.Comments[] getCommantaires(int codeFilm) {
            return base.Channel.getCommantaires(codeFilm);
        }
        
        public System.Threading.Tasks.Task<CLIENTVIDEO.ServiceReferenceVideo.Comments[]> getCommantairesAsync(int codeFilm) {
            return base.Channel.getCommantairesAsync(codeFilm);
        }
        
        public string addCommentaire(CLIENTVIDEO.ServiceReferenceVideo.Comments commentaire) {
            return base.Channel.addCommentaire(commentaire);
        }
        
        public System.Threading.Tasks.Task<string> addCommentaireAsync(CLIENTVIDEO.ServiceReferenceVideo.Comments commentaire) {
            return base.Channel.addCommentaireAsync(commentaire);
        }
        
        public string updateCommentaire(CLIENTVIDEO.ServiceReferenceVideo.Comments commentaire) {
            return base.Channel.updateCommentaire(commentaire);
        }
        
        public System.Threading.Tasks.Task<string> updateCommentaireAsync(CLIENTVIDEO.ServiceReferenceVideo.Comments commentaire) {
            return base.Channel.updateCommentaireAsync(commentaire);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CLIENTVIDEO.ServiceReferenceVideo.RemoteFileInfo CLIENTVIDEO.ServiceReferenceVideo.ISVideo.telecharger(CLIENTVIDEO.ServiceReferenceVideo.DownloadRequest request) {
            return base.Channel.telecharger(request);
        }
        
        public long telecharger(ref string FileName, out System.IO.Stream FileByteStream) {
            CLIENTVIDEO.ServiceReferenceVideo.DownloadRequest inValue = new CLIENTVIDEO.ServiceReferenceVideo.DownloadRequest();
            inValue.FileName = FileName;
            CLIENTVIDEO.ServiceReferenceVideo.RemoteFileInfo retVal = ((CLIENTVIDEO.ServiceReferenceVideo.ISVideo)(this)).telecharger(inValue);
            FileName = retVal.FileName;
            FileByteStream = retVal.FileByteStream;
            return retVal.Length;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<CLIENTVIDEO.ServiceReferenceVideo.RemoteFileInfo> CLIENTVIDEO.ServiceReferenceVideo.ISVideo.telechargerAsync(CLIENTVIDEO.ServiceReferenceVideo.DownloadRequest request) {
            return base.Channel.telechargerAsync(request);
        }
        
        public System.Threading.Tasks.Task<CLIENTVIDEO.ServiceReferenceVideo.RemoteFileInfo> telechargerAsync(string FileName) {
            CLIENTVIDEO.ServiceReferenceVideo.DownloadRequest inValue = new CLIENTVIDEO.ServiceReferenceVideo.DownloadRequest();
            inValue.FileName = FileName;
            return ((CLIENTVIDEO.ServiceReferenceVideo.ISVideo)(this)).telechargerAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CLIENTVIDEO.ServiceReferenceVideo.uploaderResponse CLIENTVIDEO.ServiceReferenceVideo.ISVideo.uploader(CLIENTVIDEO.ServiceReferenceVideo.RemoteFileInfo request) {
            return base.Channel.uploader(request);
        }
        
        public void uploader(string FileName, long Length, System.IO.Stream FileByteStream) {
            CLIENTVIDEO.ServiceReferenceVideo.RemoteFileInfo inValue = new CLIENTVIDEO.ServiceReferenceVideo.RemoteFileInfo();
            inValue.FileName = FileName;
            inValue.Length = Length;
            inValue.FileByteStream = FileByteStream;
            CLIENTVIDEO.ServiceReferenceVideo.uploaderResponse retVal = ((CLIENTVIDEO.ServiceReferenceVideo.ISVideo)(this)).uploader(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<CLIENTVIDEO.ServiceReferenceVideo.uploaderResponse> CLIENTVIDEO.ServiceReferenceVideo.ISVideo.uploaderAsync(CLIENTVIDEO.ServiceReferenceVideo.RemoteFileInfo request) {
            return base.Channel.uploaderAsync(request);
        }
        
        public System.Threading.Tasks.Task<CLIENTVIDEO.ServiceReferenceVideo.uploaderResponse> uploaderAsync(string FileName, long Length, System.IO.Stream FileByteStream) {
            CLIENTVIDEO.ServiceReferenceVideo.RemoteFileInfo inValue = new CLIENTVIDEO.ServiceReferenceVideo.RemoteFileInfo();
            inValue.FileName = FileName;
            inValue.Length = Length;
            inValue.FileByteStream = FileByteStream;
            return ((CLIENTVIDEO.ServiceReferenceVideo.ISVideo)(this)).uploaderAsync(inValue);
        }
    }
}
